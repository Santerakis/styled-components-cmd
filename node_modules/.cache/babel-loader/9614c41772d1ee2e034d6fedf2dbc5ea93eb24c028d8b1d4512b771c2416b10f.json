{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj2\\\\styled-components-cmd\\\\src\\\\components\\\\console.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from \"styled-components\";\nimport Flex from \"./flex\";\nimport Line from \"./line\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StConsole = styled.textarea`\n  width: 100%;\n  height: 70vh;\n  background: black;\n  font-size: 24px;\n  border: none;\n  resize: none;\n  color: ${props => props.color || props.theme.colors.primary};\n  &:focus {\n    outline: none;\n  }\n  @media ${props => props.theme.media.phone} {\n    border: 1px solid red;\n  }\n  @media ${props => props.theme.media.tablet} {\n    border: 1px solid green;\n  }\n`;\n_c = StConsole;\nconst Console = ({\n  color,\n  ...rest\n}) => {\n  _s();\n  const [lines, setLines] = useState(['C/users/sergey>']);\n  const OnKeyPress = e => {\n    if (e.charCode === 13) {\n      setLines([...lines, 'C/users/sergey>']);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      margin: '0 10px',\n      children: lines.map(l => /*#__PURE__*/_jsxDEV(Line, {\n        color: color,\n        children: l\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StConsole, {\n      onKeyPress: OnKeyPress,\n      color: color,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Console, \"8qIUIDcG74fr9re9h5J+0Ie9EIQ=\");\n_c2 = Console;\nexport default Console;\nvar _c, _c2;\n$RefreshReg$(_c, \"StConsole\");\n$RefreshReg$(_c2, \"Console\");","map":{"version":3,"names":["React","useState","styled","Flex","Line","jsxDEV","_jsxDEV","StConsole","textarea","props","color","theme","colors","primary","media","phone","tablet","_c","Console","rest","_s","lines","setLines","OnKeyPress","e","charCode","children","direction","margin","map","l","fileName","_jsxFileName","lineNumber","columnNumber","onKeyPress","_c2","$RefreshReg$"],"sources":["D:/proj2/styled-components-cmd/src/components/console.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"./flex\";\r\nimport Line from \"./line\";\r\n\r\nconst StConsole = styled.textarea`\r\n  width: 100%;\r\n  height: 70vh;\r\n  background: black;\r\n  font-size: 24px;\r\n  border: none;\r\n  resize: none;\r\n  color: ${props => props.color || props.theme.colors.primary};\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  @media ${props => props.theme.media.phone} {\r\n    border: 1px solid red;\r\n  }\r\n  @media ${props => props.theme.media.tablet} {\r\n    border: 1px solid green;\r\n  }\r\n`\r\n\r\nconst Console = ({color, ...rest}) => {\r\n    const [lines, setLines] = useState(['C/users/sergey>'])\r\n\r\n    const OnKeyPress = e => {\r\n        if(e.charCode === 13) {\r\n            setLines([...lines, 'C/users/sergey>'])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Flex>\r\n            <Flex direction={'column'} margin={'0 10px'}>\r\n                {lines.map(l =>\r\n                    <Line color={color}>{l}</Line>\r\n                )}\r\n            </Flex>\r\n            <StConsole onKeyPress={OnKeyPress} color={color} {...rest}/>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default Console;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGL,MAAM,CAACM,QAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,WAAWC,KAAK,IAAIA,KAAK,CAACC,KAAK,IAAID,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,OAAQ;AAC9D;AACA;AACA;AACA,WAAWJ,KAAK,IAAIA,KAAK,CAACE,KAAK,CAACG,KAAK,CAACC,KAAM;AAC5C;AACA;AACA,WAAWN,KAAK,IAAIA,KAAK,CAACE,KAAK,CAACG,KAAK,CAACE,MAAO;AAC7C;AACA;AACA,CAAC;AAAAC,EAAA,GAjBKV,SAAS;AAmBf,MAAMW,OAAO,GAAGA,CAAC;EAACR,KAAK;EAAE,GAAGS;AAAI,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAEvD,MAAMsB,UAAU,GAAGC,CAAC,IAAI;IACpB,IAAGA,CAAC,CAACC,QAAQ,KAAK,EAAE,EAAE;MAClBH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,iBAAiB,CAAC,CAAC;IAC3C;EACJ,CAAC;EAED,oBACIf,OAAA,CAACH,IAAI;IAAAuB,QAAA,gBACDpB,OAAA,CAACH,IAAI;MAACwB,SAAS,EAAE,QAAS;MAACC,MAAM,EAAE,QAAS;MAAAF,QAAA,EACvCL,KAAK,CAACQ,GAAG,CAACC,CAAC,iBACRxB,OAAA,CAACF,IAAI;QAACM,KAAK,EAAEA,KAAM;QAAAgB,QAAA,EAAEI;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACP5B,OAAA,CAACC,SAAS;MAAC4B,UAAU,EAAEZ,UAAW;MAACb,KAAK,EAAEA,KAAM;MAAA,GAAKS;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEf,CAAC;AAACd,EAAA,CAnBIF,OAAO;AAAAkB,GAAA,GAAPlB,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}